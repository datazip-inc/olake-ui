{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: {{ .Values.namespace.name }}
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: database
    {{- include "olake.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: database
    spec:
      containers:
      - name: postgresql
        image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
        imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
        ports:
        - name: postgres
          containerPort: {{ .Values.postgresql.service.port }}
          protocol: TCP
        envFrom:
        - secretRef:
            name: postgresql-secret
        resources:
          {{- toYaml .Values.postgresql.resources | nindent 10 }}
        {{- if .Values.postgresql.persistence.enabled }}
        volumeMounts:
        - name: postgresql-storage
          mountPath: /var/lib/postgresql/data
        {{- end }}
      {{- if .Values.postgresql.persistence.enabled }}
      volumes:
      - name: postgresql-storage
        persistentVolumeClaim:
          claimName: postgresql-pvc
      {{- end }}
{{- end }}