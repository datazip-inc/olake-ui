# Default values for olake.
# This is a YAML-formatted file.
# Declare variables to be substituted into your templates.

global:
  # Global image settings
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: "standard"

# Namespace configuration
namespace:
  name: olake
  create: true

# PostgreSQL configuration
postgresql:
  enabled: true
  image:
    repository: postgres
    tag: "14-alpine"
    pullPolicy: IfNotPresent
  
  auth:
    database: postgres
    username: temporal
    password: temporal123
  
  service:
    type: ClusterIP
    port: 5432
  
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  
  persistence:
    enabled: true
    storageClass: ""
    size: 8Gi

# Elasticsearch configuration
elasticsearch:
  enabled: true
  image:
    repository: docker.elastic.co/elasticsearch/elasticsearch
    tag: "8.8.0"
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 9200
  
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1000m"
  
  env:
    - name: discovery.type
      value: single-node
    - name: ES_JAVA_OPTS
      value: "-Xms512m -Xmx512m"
    - name: xpack.security.enabled
      value: "false"

# Temporal configuration
temporal:
  enabled: true
  
  server:
    image:
      repository: temporalio/auto-setup
      tag: "1.22.0"
      pullPolicy: IfNotPresent
    
    service:
      type: ClusterIP
      port: 7233
    
    resources:
      requests:
        memory: "512Mi"
        cpu: "500m"
      limits:
        memory: "1Gi"
        cpu: "1000m"
    
    env:
      - name: DB
        value: postgresql
      - name: DB_PORT
        value: "5432"
      - name: POSTGRES_USER
        value: temporal
      - name: POSTGRES_PWD
        value: temporal123
      - name: POSTGRES_SEEDS
        value: postgresql.olake.svc.cluster.local
      - name: DYNAMIC_CONFIG_FILE_PATH
        value: config/dynamicconfig/development-sql.yaml
      - name: ENABLE_ES
        value: "true"
      - name: ES_SEEDS
        value: elasticsearch.olake.svc.cluster.local
      - name: ES_VERSION
        value: v8
  
  ui:
    enabled: true
    image:
      repository: temporalio/ui
      tag: "2.21.3"
      pullPolicy: IfNotPresent
    
    service:
      type: NodePort
      port: 8080
      nodePort: 30080
    
    resources:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "256Mi"
        cpu: "200m"
    
    env:
      - name: TEMPORAL_ADDRESS
        value: temporal.olake.svc.cluster.local:7233
      - name: TEMPORAL_CORS_ORIGINS
        value: http://localhost:3000

# OLake UI (Main Application) configuration
olakeUI:
  enabled: true
  image:
    repository: olake-ui
    tag: local
    pullPolicy: Never
  
  service:
    type: NodePort
    ports:
      backend: 8080
      frontend: 3000
    nodePorts:
      backend: 30081
      frontend: 30082
  
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1Gi"
      cpu: "1000m"
  
  config:
    database:
      host: postgresql.olake.svc.cluster.local
      port: 5432
      name: postgres
      user: temporal
      password: temporal123
    temporal:
      host: temporal.olake.svc.cluster.local
      port: 7233
      taskQueue: OLAKE_TASK_QUEUE
  
  # Initialization job for user signup
  initJob:
    enabled: true
    image:
      repository: olake-ui
      tag: local
      pullPolicy: Never
    resources:
      requests:
        memory: "256Mi"
        cpu: "250m"
      limits:
        memory: "512Mi"
        cpu: "500m"

# OLake K8s Worker configuration
olakeWorker:
  enabled: true
  image:
    repository: olake-k8s-worker
    tag: local
    pullPolicy: Never
  
  replicaCount: 1
  
  service:
    type: ClusterIP
    port: 8090
  
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  
  # Service Account for Kubernetes API access
  serviceAccount:
    create: true
    name: olake-k8s-worker
    annotations: {}
  
  # RBAC permissions
  rbac:
    create: true
    rules:
      - apiGroups: [""]
        resources: ["pods", "pods/log"]
        verbs: ["get", "list", "create", "delete", "watch"]
      - apiGroups: ["batch"]
        resources: ["jobs"]
        verbs: ["get", "list", "create", "delete", "watch"]
  
  config:
    # Temporal Configuration
    temporal:
      address: temporal.olake.svc.cluster.local:7233
      taskQueue: OLAKE_K8S_TASK_QUEUE
    
    # Database Configuration
    database:
      host: postgresql.olake.svc.cluster.local
      port: 5432
      name: postgres
      user: temporal
      password: temporal123
      sslMode: disable
    
    # Kubernetes Configuration
    kubernetes:
      namespace: olake
      imageRegistry: olakego
      imagePullPolicy: IfNotPresent
      serviceAccount: olake-k8s-worker
      storagePvcName: olake-jobs-pvc
    
    # Timeout Configuration
    timeouts:
      workflow:
        discover: 2h
        test: 2h
        sync: 720h  # 30 days
      activity:
        discover: 30m
        test: 30m
        sync: 700h  # ~29 days
    
    # Job Configuration
    job:
      ttlSeconds: 0  # No timeout for long-running sync jobs
      backoffLimit: 3
      parallelism: 1
      completions: 1
    
    # Worker Configuration
    worker:
      maxConcurrentActivities: 10
      maxConcurrentWorkflows: 5
    
    # Health Check Configuration
    healthCheck:
      port: 8090
    
    # Logging Configuration
    logging:
      level: info
      format: json
  
  # Health checks
  livenessProbe:
    httpGet:
      path: /health
      port: 8090
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 3
  
  readinessProbe:
    httpGet:
      path: /ready
      port: 8090
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 3

# Storage configuration
storage:
  # Persistent Volume for shared job storage
  persistentVolume:
    enabled: true
    name: olake-jobs-pv
    capacity: 10Gi
    accessModes:
      - ReadWriteMany
    reclaimPolicy: Retain
    storageClassName: olake-jobs
    hostPath: /data/olake-jobs
  
  # Persistent Volume Claim
  persistentVolumeClaim:
    enabled: true
    name: olake-jobs-pvc
    accessModes:
      - ReadWriteOnce
    storageClassName: standard
    size: 10Gi

# Security settings
securityContext:
  runAsUser: 0
  fsGroup: 0
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

# Node selector and tolerations
nodeSelector: {}
tolerations: []
affinity: {}