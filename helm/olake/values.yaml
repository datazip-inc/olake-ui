# Default values for OLake.
# This is a YAML-formatted file.
# Declare variables to be substituted into your templates.

# =============================================================================
# GLOBAL CONFIGURATION
# =============================================================================

# -- Override the deployment namespace
namespaceOverride: "olake"

# -- Provide a name in place of olake for `app:` labels
nameOverride: ""

# -- Provide a name to substitute for the full names of resources
fullnameOverride: ""

# -- Global configuration that applies to all components
global:
  # -- Global image registry to use for all images
  # Examples:
  #   registry.example.com
  #   harbor.company.com/olake
  imageRegistry: ""
  
  # -- Global image pull secrets
  # Examples:
  #   - name: myRegistryKeySecretName
  imagePullSecrets: []
  
  # -- Global storage class for all persistent volumes
  # Set to "-" to disable dynamic provisioning
  # Examples: gp2, fast, standard, local-path
  storageClass: ""
  
  # -- Global security context applied to all pods
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    seccompProfile:
      type: RuntimeDefault

# =============================================================================
# NAMESPACE CONFIGURATION
# =============================================================================

# -- Namespace configuration
namespace:
  # -- Name of the namespace where all resources will be deployed
  name: olake
  
  # -- Whether to create the namespace if it doesn't exist
  create: true
  
  # -- Additional labels for the namespace
  labels: {}
  
  # -- Additional annotations for the namespace
  annotations: {}

# =============================================================================
# OLAKE MAIN APPLICATION
# =============================================================================

# OLake UI - Main application frontend and backend
olakeUI:
  # -- Enable OLake UI deployment
  enabled: true
  
  # -- Number of OLake UI replicas
  # For production, consider 2+ replicas for high availability
  replicaCount: 1
  
  # -- OLake UI image configuration
  image:
    # -- OLake UI image repository
    repository: dzipstagingacr.azurecr.io/olake-ui
    
    # -- OLake UI image tag
    # Use 'local' for development, specific version for production
    tag: latest
    
    # -- Image pull policy
    # Use 'Never' for local development, 'Always' for production
    pullPolicy: Always
  
  # -- Pod scheduling constraints
  nodeSelector: {}
  
  # -- Tolerations for pod assignment
  tolerations: []
  
  # -- Affinity settings for pod assignment
  affinity: {}
  
  # -- Additional pod annotations
  podAnnotations: {}
  
  # -- Additional pod labels
  podLabels: {}
  
  # -- OLake UI readiness probe override (optional)
  # Defaults: initialDelaySeconds: 30, periodSeconds: 10, timeoutSeconds: 5,
  #           failureThreshold: 3, successThreshold: 1, tcpSocket: port 8080
  # Example customizations:
  #   readinessProbe:
  #     initialDelaySeconds: 45
  #     httpGet:
  #       path: /health
  #       port: 8080
  readinessProbe: {}
  
  # -- OLake UI liveness probe override (optional)
  # Defaults: initialDelaySeconds: 60, periodSeconds: 30, timeoutSeconds: 10,
  #           failureThreshold: 3, successThreshold: 1, tcpSocket: port 8080
  # Example customizations:
  #   livenessProbe:
  #     periodSeconds: 60
  #     httpGet:
  #       path: /health
  #       port: 8080
  livenessProbe: {}
  
  # -- OLake UI service configuration
  # For external access, change type to NodePort or LoadBalancer  
  service:
    # -- Service type (ClusterIP for internal, NodePort/LoadBalancer for external access)
    type: ClusterIP
    # -- Service annotations
    annotations: {}
  
  # -- Ingress configuration for external access
  ingress:
    # -- Enable ingress
    enabled: false
    
    # -- Ingress class name
    # Examples: nginx, traefik, alb
    className: ""
    
    # -- Ingress annotations
    annotations: {}
      # nginx.ingress.kubernetes.io/rewrite-target: /
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      # cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # -- Ingress hosts configuration
    hosts:
      - host: olake.local
        paths:
          - path: /
            pathType: Prefix
    
    # -- TLS configuration
    tls: []
    #  - secretName: olake-tls
    #    hosts:
    #      - olake.example.com
  
  # -- OLake UI resource requirements (optional overrides)
  # Defaults: requests: memory=512Mi, cpu=500m (no limits by default)
  # Example customizations:
  #   resources:
  #     requests:
  #       memory: "1Gi"
  #       cpu: "750m"
  #     limits:
  #       memory: "2Gi"
  #       cpu: "1500m"
  resources: {}
  
  # -- Initialization job configuration (always enabled)
  initJob:
    # -- Admin user credentials for initial setup
    adminUser:
      # -- Admin username
      username: "admin"
      
      # -- Admin password (change this in production!)
      password: "password"
      
      # -- Admin email address
      email: "admin@example.com"
    
    # -- Initialization job resource requirements (optional overrides)
    # Defaults: requests: memory=128Mi, cpu=100m (no limits by default)
    # Example customizations:
    #   resources:
    #     requests:
    #       memory: "256Mi"
    #       cpu: "200m"
    #     limits:
    #       memory: "512Mi"
    #       cpu: "400m"
    resources: {}

# =============================================================================
# OLAKE KUBERNETES WORKER
# =============================================================================

# OLake K8s Worker - Executes data pipeline tasks as Kubernetes pods
olakeWorker:
  # -- Enable OLake K8s Worker deployment
  enabled: true
  
  # -- Number of OLake Worker replicas
  # Multiple replicas can handle more concurrent workflows
  replicaCount: 1
  
  # -- OLake Worker image configuration
  image:
    # -- OLake Worker image repository
    repository: dzipstagingacr.azurecr.io/olake-k8s-worker
    
    # -- OLake Worker image tag
    # Use 'local' for development, specific version for production
    tag: latest
    
    # -- Image pull policy
    # Use 'Never' for local development, 'Always' for production
    pullPolicy: Always
  
  # -- Pod scheduling constraints
  nodeSelector: {}
  
  # -- Tolerations for pod assignment
  tolerations: []
  
  # -- Affinity settings for pod assignment
  affinity: {}
  
  # -- Additional pod annotations
  podAnnotations: {}
  
  # -- Additional pod labels
  podLabels: {}
  
  # -- OLake Worker readiness probe override (optional)
  # Defaults: initialDelaySeconds: 30, periodSeconds: 10, timeoutSeconds: 5,
  #           failureThreshold: 3, successThreshold: 1, httpGet: /health on port 8090
  # Example customizations:
  #   readinessProbe:
  #     initialDelaySeconds: 45
  #     httpGet:
  #       path: /healthz
  #       port: 8090
  readinessProbe: {}
  
  # -- OLake Worker liveness probe override (optional)
  # Defaults: initialDelaySeconds: 60, periodSeconds: 30, timeoutSeconds: 10,
  #           failureThreshold: 3, successThreshold: 1, httpGet: /health on port 8090
  # Example customizations:
  #   livenessProbe:
  #     periodSeconds: 60
  livenessProbe: {}
  
  # -- Service is hardcoded: ClusterIP on port 8090 for health checks
  
  # -- OLake Worker resource requirements (optional overrides)
  # Defaults: requests: memory=256Mi, cpu=250m (no limits by default)
  # Example customizations:
  #   resources:
  #     requests:
  #       memory: "512Mi"
  #       cpu: "500m"
  #     limits:
  #       memory: "1Gi"
  #       cpu: "1000m"
  resources: {}
  
  # -- Service Account configuration for Kubernetes API access
  serviceAccount:
    # -- Create service account
    create: true
    
    # -- Service account name
    # If not set and create is true, a name is generated using the fullname template
    name: ""
    
    # -- Service account annotations
    annotations: {}
  
  # -- OLake Worker application configuration
  config:
    # -- Worker performance configuration
    worker:
      # -- Maximum concurrent activities per worker
      # Increase for higher throughput, decrease for resource constraints
      maxConcurrentActivities: 10
      
      # -- Maximum concurrent workflows per worker
      # Usually lower than activities
      maxConcurrentWorkflows: 5
    
    # -- Timeout configuration for different operation types
    timeouts:
      # -- Workflow execution timeouts
      workflow:
        # -- Timeout for catalog discovery workflows
        discover: 2h
        
        # -- Timeout for connection test workflows
        test: 2h
        
        # -- Timeout for data sync workflows (30 days)
        sync: 720h
      
      # -- Activity execution timeouts
      activity:
        # -- Timeout for catalog discovery activities
        discover: 30m
        
        # -- Timeout for connection test activities
        test: 30m
        
        # -- Timeout for data sync activities (29 days, slightly less than workflow)
        sync: 700h
    
    # -- Logging configuration
    logging:
      # -- Log level (debug, info, warn, error)
      level: info
      
      # -- Log format (json, text)
      format: json

# =============================================================================
# STORAGE CONFIGURATION
# =============================================================================

# Storage configuration for shared data exchange between pods
# Choose between self-managed NFS server or external storage (EFS/Azure Files)
nfsServer:
  # -- Enable self-managed NFS server deployment
  # When false, you must provide external storage (EFS/Azure Files/etc.)
  enabled: true
  
  # -- External storage configuration (used when enabled: false)
  external:
    # -- PVC name for external storage
    name: olake-jobs-pvc
    
    # -- Storage size for external storage
    size: 10Gi
  
  # -- Number of NFS server replicas (should be 1 for StatefulSet)
  replicaCount: 1
  
  # -- NFS server image configuration
  image:
    # -- NFS server image repository
    repository: itsthenetwork/nfs-server-alpine
    
    # -- NFS server image tag
    tag: "latest"
    
    # -- Image pull policy
    pullPolicy: Always
  
  # -- Pod scheduling constraints
  nodeSelector: {}
  
  # -- Tolerations for pod assignment
  tolerations: []
  
  # -- Affinity settings for pod assignment
  affinity: {}
  
  # -- Additional pod annotations
  podAnnotations: {}
  
  # -- Additional pod labels
  podLabels: {}
  
  # -- NFS server resource requirements
  resources:
    requests:
      # -- Memory request
      memory: "256Mi"
      # -- CPU request
      cpu: "250m"
    limits:
      # -- Memory limit
      memory: "512Mi"
      # -- CPU limit
      cpu: "500m"
  
  # -- NFS server persistence configuration
  # This is the underlying storage for the NFS server itself
  persistence:
    # -- Size of underlying storage for NFS server
    size: 20Gi
    
    # -- Access modes for underlying storage
    accessModes:
      - ReadWriteOnce

# =============================================================================
# TEMPORAL WORKFLOW ENGINE
# =============================================================================

# Temporal configuration for workflow orchestration
temporal:
  # -- Enable Temporal deployment
  enabled: true
  
  # -- Temporal server configuration
  server:
    # -- Number of Temporal server replicas
    # For production, consider 3+ replicas for high availability
    replicaCount: 1
    
    # -- Temporal server image configuration
    image:
      # -- Temporal server image repository
      repository: temporalio/auto-setup
      
      # -- Temporal server image tag
      # Check https://hub.docker.com/r/temporalio/auto-setup/tags for latest versions
      tag: "1.22.3"
      
      # -- Image pull policy
      pullPolicy: Always
    
    # -- Pod scheduling constraints
    nodeSelector: {}
    
    # -- Tolerations for pod assignment
    tolerations: []
    
    # -- Affinity settings for pod assignment
    affinity: {}
    
    # -- Additional pod annotations
    podAnnotations: {}
    
    # -- Additional pod labels
    podLabels: {}
    
    # -- Temporal server readiness probe override (optional)
    # Defaults: initialDelaySeconds: 10, periodSeconds: 10, timeoutSeconds: 5,
    #           failureThreshold: 3, successThreshold: 1, tcpSocket: port 7233
    # Example customizations:
    #   readinessProbe:
    #     initialDelaySeconds: 15
    readinessProbe: {}
    
    # -- Temporal server liveness probe override (optional)
    # Defaults: initialDelaySeconds: 150, periodSeconds: 60, timeoutSeconds: 10,
    #           failureThreshold: 3, successThreshold: 1, tcpSocket: port 7233
    # Example customizations:
    #   livenessProbe:
    #     initialDelaySeconds: 120
    livenessProbe: {}
    
    # -- Temporal server service annotations (optional)
    service:
      annotations: {}
    
    # -- Temporal server resource requirements (optional overrides)
    # Defaults: requests: memory=512Mi, cpu=500m (no limits by default)
    # Example customizations:
    #   resources:
    #     requests:
    #       memory: "1Gi"
    #       cpu: "750m"
    #     limits:
    #       memory: "2Gi"
    #       cpu: "1500m"
    resources: {}
  
  # -- Temporal Web UI configuration (disabled by default since rarely used)
  ui:
    # -- Enable Temporal Web UI
    enabled: false

# =============================================================================
# POSTGRESQL DATABASE
# =============================================================================

# PostgreSQL is used as the backend database for Temporal and OLake
postgresql:
  # -- Enable PostgreSQL deployment
  enabled: true
  
  # -- Number of PostgreSQL replicas
  # Note: PostgreSQL clustering requires additional configuration
  replicaCount: 1
  
  # -- PostgreSQL image configuration
  image:
    # -- PostgreSQL image repository
    repository: postgres
    
    # -- PostgreSQL image tag
    # Supported versions: 12, 13, 14, 15
    tag: "14-alpine"
    
    # -- Image pull policy
    pullPolicy: Always
  
  # -- Authentication configuration
  auth:
    # -- PostgreSQL super user name
    postgresUser: "temporal"
    
    # -- PostgreSQL super user password
    # In production, consider using existingSecret
    postgresPassword: "temporal"
    
    # -- PostgreSQL application database
    database: "temporal"
    
    # -- Name of existing secret containing PostgreSQL credentials
    # Keys: postgres-password, password, username
    existingSecret: ""
    
    # -- Key in existing secret containing PostgreSQL super user password
    secretKeys:
      adminPasswordKey: postgres-password
      userPasswordKey: password
      usernameKey: username
  
  # -- Pod scheduling constraints
  nodeSelector: {}
  
  # -- Tolerations for pod assignment
  tolerations: []
  
  # -- Affinity settings for pod assignment
  affinity: {}
  
  # -- Additional pod annotations
  podAnnotations: {}
  
  # -- Additional pod labels
  podLabels: {}
  
  # -- PostgreSQL readiness probe override (optional)
  # Defaults: initialDelaySeconds: 5, periodSeconds: 10, timeoutSeconds: 5,
  #           failureThreshold: 6, successThreshold: 1, exec: pg_isready command
  # Example customizations:
  #   readinessProbe:
  #     initialDelaySeconds: 10
  readinessProbe: {}
  
  # -- PostgreSQL liveness probe override (optional)
  # Defaults: initialDelaySeconds: 30, periodSeconds: 10, timeoutSeconds: 5,
  #           failureThreshold: 6, successThreshold: 1, exec: pg_isready command
  # Example customizations:
  #   livenessProbe:
  #     initialDelaySeconds: 60
  livenessProbe: {}
  
  # -- PostgreSQL service annotations (optional)
  service:
    annotations: {}
  
  # -- PostgreSQL resource requirements (optional overrides)
  # Defaults: requests: memory=256Mi, cpu=250m (no limits by default)
  # Example customizations:
  #   resources:
  #     requests:
  #       memory: "512Mi"
  #       cpu: "500m"
  #     limits:
  #       memory: "1Gi"
  #       cpu: "1000m"
  resources: {}
  
  # -- PostgreSQL persistence configuration
  persistence:
    # -- Enable persistent storage
    enabled: true
    
    # -- Size of persistent volume
    size: 8Gi
    
    # -- Access modes for persistent volume
    accessModes:
      - ReadWriteOnce
    
    # -- Additional annotations for PVC
    annotations: {}

# =============================================================================
# ELASTICSEARCH
# =============================================================================

# Elasticsearch is used by Temporal for advanced visibility features
elasticsearch:
  # -- Enable Elasticsearch deployment
  # Set to false to disable advanced visibility in Temporal
  enabled: true
  
  # -- Number of Elasticsearch replicas
  # For production, consider 3+ replicas for high availability
  replicaCount: 1
  
  # -- Elasticsearch image configuration
  image:
    # -- Elasticsearch image repository
    repository: elasticsearch
    
    # -- Elasticsearch image tag
    # Supported versions: 7.x, 8.x
    tag: "7.17.10"
    
    # -- Image pull policy
    pullPolicy: Always
  
  # -- Pod scheduling constraints
  nodeSelector: {}
  
  # -- Tolerations for pod assignment
  tolerations: []
  
  # -- Affinity settings for pod assignment
  affinity: {}
  
  # -- Additional pod annotations
  podAnnotations: {}
  
  # -- Additional pod labels
  podLabels: {}
  
  # -- Elasticsearch readiness probe override (optional)
  # Defaults: initialDelaySeconds: 10, periodSeconds: 10, timeoutSeconds: 5,
  #           failureThreshold: 3, successThreshold: 1, httpGet: /_cluster/health?local=true on port 9200
  # Example customizations:
  #   readinessProbe:
  #     initialDelaySeconds: 15
  readinessProbe: {}
  
  # -- Elasticsearch liveness probe override (optional)
  # Defaults: initialDelaySeconds: 90, periodSeconds: 10, timeoutSeconds: 5,
  #           failureThreshold: 3, successThreshold: 1, httpGet: /_cluster/health?local=true on port 9200
  # Example customizations:
  #   livenessProbe:
  #     initialDelaySeconds: 120
  livenessProbe: {}
  
  # -- Elasticsearch service annotations (optional)
  service:
    annotations: {}
  
  # -- Elasticsearch resource requirements (optional overrides)
  # Defaults: requests: memory=1Gi, cpu=500m (no limits by default)
  # Example customizations:
  #   resources:
  #     requests:
  #       memory: "2Gi"
  #       cpu: "1000m"
  #     limits:
  #       memory: "4Gi"
  #       cpu: "2000m"
  resources: {}
  
