{{- if .Values.olakeUI.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: olake-ui
  namespace: {{ .Values.namespace.name }}
  annotations: {}
  labels:
    app.kubernetes.io/name: olake-ui
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: ui
    {{- include "olake.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.olakeUI.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: olake-ui
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: ui
  template:
    metadata:
      annotations:
        {{- with .Values.olakeUI.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        app.kubernetes.io/name: olake-ui
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: ui
        {{- with .Values.olakeUI.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.olakeUI.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.olakeUI.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.olakeUI.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
      - name: wait-for-postgresql
        image: "{{ .Values.olakeUI.initImage.repository }}:{{ .Values.olakeUI.initImage.tag }}"
        imagePullPolicy: {{ .Values.olakeUI.initImage.pullPolicy }}
        command:
        - /bin/sh
        - -c
        - |
          echo "Waiting for PostgreSQL to be ready..."
          until nc -z postgresql.{{ .Values.namespace.name }}.svc.cluster.local {{ .Values.postgresql.service.port }}; do
            echo "PostgreSQL is not ready yet. Waiting..."
            sleep 5
          done
          echo "PostgreSQL is ready!"
      - name: wait-for-temporal
        image: "{{ .Values.olakeUI.initImage.repository }}:{{ .Values.olakeUI.initImage.tag }}"
        imagePullPolicy: {{ .Values.olakeUI.initImage.pullPolicy }}
        command:
        - /bin/sh
        - -c
        - |
          echo "Waiting for Temporal to be ready..."
          until nc -z temporal.{{ .Values.namespace.name }}.svc.cluster.local {{ .Values.temporal.server.service.port }}; do
            echo "Temporal is not ready yet. Waiting..."
            sleep 5
          done
          echo "Temporal is ready!"
      containers:
      - name: olake-ui
        image: "{{ .Values.olakeUI.image.repository }}:{{ .Values.olakeUI.image.tag }}"
        imagePullPolicy: {{ .Values.olakeUI.image.pullPolicy }}
        ports:
        - name: backend
          containerPort: {{ .Values.olakeUI.service.ports.backend }}
          protocol: TCP
        - name: frontend
          containerPort: {{ .Values.olakeUI.service.ports.frontend }}
          protocol: TCP
        env:
        - name: PERSISTENT_DIR
          value: "/tmp/olake-config"
        volumeMounts:
        - name: olake-config
          mountPath: /opt/backend/conf
        - name: shared-storage
          mountPath: /tmp/olake-config
        resources:
          {{- toYaml .Values.olakeUI.resources | nindent 10 }}
        {{- if .Values.olakeUI.readinessProbe.enabled }}
        readinessProbe:
          initialDelaySeconds: {{ .Values.olakeUI.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.olakeUI.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.olakeUI.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.olakeUI.readinessProbe.failureThreshold }}
          successThreshold: {{ .Values.olakeUI.readinessProbe.successThreshold }}
          {{- with .Values.olakeUI.readinessProbe.httpGet }}
          httpGet:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.olakeUI.readinessProbe.tcpSocket }}
          tcpSocket:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- if .Values.olakeUI.livenessProbe.enabled }}
        livenessProbe:
          initialDelaySeconds: {{ .Values.olakeUI.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.olakeUI.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.olakeUI.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.olakeUI.livenessProbe.failureThreshold }}
          successThreshold: {{ .Values.olakeUI.livenessProbe.successThreshold }}
          {{- with .Values.olakeUI.livenessProbe.httpGet }}
          httpGet:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.olakeUI.livenessProbe.tcpSocket }}
          tcpSocket:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}
      volumes:
      - name: olake-config
        configMap:
          name: olake-ui-config
      - name: shared-storage
        persistentVolumeClaim:
          claimName: {{ .Values.storage.persistentVolumeClaim.name }}
{{- end }}