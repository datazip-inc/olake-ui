apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "olake.fullname" . }}-post-install-wait
  namespace: {{ include "olake.namespace" . }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/name: {{ include "olake.name" . }}-post-install-wait
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: post-install-wait
    {{- include "olake.labels" . | nindent 4 }}
spec:
  backoffLimit: 3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "olake.name" . }}-post-install-wait
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: post-install-wait
    spec:
      restartPolicy: Never
      containers:
      - name: wait-for-stack
        image: curlimages/curl:8.1.2
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
          runAsGroup: 65534
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        command:
        - /bin/sh
        - -c
        - |
          set -e

          check_service() {
            local service_name="$1"
            local url="$2"
            echo "--> Checking readiness of $service_name at $url..."
            for i in $(seq 1 60); do
              if curl --fail -s -o /dev/null "$url"; then
                echo "✓ $service_name is ready!"
                return 0
              fi
              echo "Attempt $i/60 for $service_name: service not ready. Retrying in 10 seconds..."
              sleep 10
            done
            echo "✗ Timeout: $service_name failed to become ready after 10 minutes."
            exit 1
          }

          echo "Waiting for OLake stack to be ready..."
          
          check_service "olake-workers" "http://olake-workers.{{ include "olake.namespace" . }}.svc.cluster.local:8090/ready"
          
          echo "✓ OLake stack is fully operational."
          exit 0
        resources:
          requests:
            memory: "32Mi"
            cpu: "50m"
          limits:
            memory: "64Mi"
            cpu: "100m"