{{- if .Values.olakeWorker.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: olake-k8s-worker
  namespace: {{ .Values.namespace.name }}
  annotations: {}
  labels:
    app.kubernetes.io/name: olake-worker
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: worker
    {{- include "olake.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.olakeWorker.replicaCount }}
  minReadySeconds: 30
  progressDeadlineSeconds: 600
  selector:
    matchLabels:
      app.kubernetes.io/name: olake-worker
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: worker
  template:
    metadata:
      annotations:
        {{- with .Values.olakeWorker.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        app.kubernetes.io/name: olake-worker
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: worker
        {{- with .Values.olakeWorker.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.olakeWorker.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.olakeWorker.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.olakeWorker.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.global.securityContext | nindent 8 }}
      serviceAccountName: {{ include "olake.workerServiceAccountName" . }}
      initContainers:
      - name: wait-for-olake-ui
        image: busybox:latest
        imagePullPolicy: IfNotPresent
        command:
        - /bin/sh
        - -c
        - |
          echo "Waiting for OLake UI to be ready..."
          until nc -z olake-ui.{{ .Values.namespace.name }}.svc.cluster.local 8080; do
            echo "OLake UI is not ready yet. Waiting..."
            sleep 5
          done
          echo "OLake UI is ready!"
      containers:
      - name: olake-k8s-worker
        image: "{{ .Values.olakeWorker.image.repository }}:{{ .Values.olakeWorker.image.tag }}"
        imagePullPolicy: {{ .Values.olakeWorker.image.pullPolicy }}
        ports:
        - name: health
          containerPort: {{ .Values.olakeWorker.config.healthCheck.port }}
          protocol: TCP
        env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: olake-k8s-worker-secret
              key: DB_PASSWORD
        envFrom:
        - configMapRef:
            name: olake-k8s-worker-config
        resources:
          {{- toYaml .Values.olakeWorker.resources | nindent 10 }}
        {{- $defaultReadinessProbe := dict 
          "initialDelaySeconds" 30
          "periodSeconds" 10
          "timeoutSeconds" 5
          "failureThreshold" 3
          "successThreshold" 1
          "httpGet" (dict "path" "/health" "port" 8090)
        }}
        {{- $readinessProbe := mergeOverwrite $defaultReadinessProbe (.Values.olakeWorker.readinessProbe | default dict) }}
        readinessProbe:
          {{- toYaml $readinessProbe | nindent 10 }}
        {{- $defaultLivenessProbe := dict 
          "initialDelaySeconds" 60
          "periodSeconds" 30
          "timeoutSeconds" 10
          "failureThreshold" 3
          "successThreshold" 1
          "httpGet" (dict "path" "/health" "port" 8090)
        }}
        {{- $livenessProbe := mergeOverwrite $defaultLivenessProbe (.Values.olakeWorker.livenessProbe | default dict) }}
        livenessProbe:
          {{- toYaml $livenessProbe | nindent 10 }}
        volumeMounts:
        - name: shared-storage
          mountPath: /data/olake-jobs
      volumes:
      - name: shared-storage
        persistentVolumeClaim:
          claimName: {{ include "olake.sharedStoragePVC" . }}
{{- end }}