{{- if .Values.nfsServer.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "olake.fullname" . }}-nfs-server
  namespace: {{ include "olake.namespace" . }}
  annotations:
    "helm.sh/resource-policy": keep
  labels:
    app.kubernetes.io/name: {{ include "olake.name" . }}-nfs-server
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: nfs-server
spec:
  serviceName: {{ include "olake.fullname" . }}-nfs-server
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "olake.name" . }}-nfs-server
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: nfs-server
  template:
    metadata:
      annotations:
        {{- with .Values.nfsServer.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "olake.name" . }}-nfs-server
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: nfs-server
        {{- with .Values.nfsServer.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.nfsServer.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nfsServer.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nfsServer.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "olake.fullname" . }}-nfs-server
      containers:
      - name: nfs-server
        image: "registry.k8s.io/sig-storage/nfs-provisioner:v4.0.8"
        imagePullPolicy: IfNotPresent
        ports:
        - name: nfs
          containerPort: 2049
        - name: nfs-udp
          containerPort: 2049
          protocol: UDP
        - name: mountd
          containerPort: 20048
        - name: mountd-udp
          containerPort: 20048
          protocol: UDP
        - name: rpcbind
          containerPort: 111
        - name: rpcbind-udp
          containerPort: 111
          protocol: UDP
        - name: nlockmgr-tcp
          containerPort: 32803
        - name: nlockmgr-udp
          containerPort: 32803
          protocol: UDP
        - name: status-tcp
          containerPort: 662
        - name: status-udp
          containerPort: 662
          protocol: UDP
        - name: rquotad-tcp
          containerPort: 875
        - name: rquotad-udp
          containerPort: 875
          protocol: UDP
        securityContext:
          capabilities:
            add:
              - DAC_READ_SEARCH
              - SYS_RESOURCE
        args:
          - "-provisioner={{ include "olake.fullname" . }}/nfs-server"
          - "-grace-period=0"
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SERVICE_NAME
          value: {{ include "olake.fullname" . }}-nfs-server
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: export-volume
          mountPath: /export
        readinessProbe:
          tcpSocket:
            port: 2049
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        livenessProbe:
          tcpSocket:
            port: 2049
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        resources:
          requests:
            cpu: 250m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
  volumeClaimTemplates:
  - metadata:
      name: export-volume
      annotations:
        "helm.sh/resource-policy": keep
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.nfsServer.persistence.size | default "20Gi" }}
      {{- if .Values.global.storageClass }}
      storageClassName: {{ .Values.global.storageClass }}
      {{- end }}
{{- end }}